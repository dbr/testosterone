#!/usr/bin/env python
# save for clean context for tested program
__globals__ = globals()
__locals__  = locals()

import PyTest, sys

# interpret the arg on the command line as a filename to check
arg = sys.argv[1:2]
if not arg:
    print "usage: $ pytest [-arh] [filename]"
    raise SystemExit
else:
    filename = arg[0]

heisenberg = PyTest.Observer(filename)
heisenberg.start_timer()

original = file(filename).read()
interpolated = PyTest.Interpolator().interpolate(original)


# turn stdout over to our tester, run the test, and then restore stdout
__globals__['__pytest__'] = sys.stdout = heisenberg
heisenberg.run(interpolated, __globals__, __locals__)
sys.stdout = sys.__stdout__

heisenberg.stop_timer()
print heisenberg.report()
