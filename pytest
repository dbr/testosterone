#!/usr/bin/env python
"""Pytest is a testing interpreter for Python.

Usage: Pytest takes a single argument, which is a Unix filename pattern. Pytest
    will test all files in the current directory that match the pattern,
    outputing a report at the end.

Example:

    $ pytest *.pyt


For a detailed discussion, please see the file TUTORIAL.pyt included with the
distribution.

"""

##
# Set aside a clean context for the test script.
##
import sys
__modules__ = sys.modules.copy()
# del __modules__['sys'] # afaict this doesn't actually unload the module :/
__globals__ = globals()
__locals__  = locals()


##
# Now proceed as normal.
##

__version__ = '0.3'
__author__ = 'Chad Whitacre'
__author_email__ = 'chad [at] zetadev [dot] com'
__url__ = 'http://www.zetadev.com/software/'

import fnmatch

import PyTest



##
# Parse the command line argument.
##

arg = sys.argv[1:2]
if not arg:
    print __doc__
    raise SystemExit
else:
    fnpattern = arg[0]
    tests = fnmatch.filter(os.listdir(), fnpattern)
    print tests
    raise SystemExit


##
# Instantiate our tester objects and execute the test.
##

heisenberg = PyTest.Observer(filename)
heisenberg.start_timer()

original = file(filename).read()
interpolated = PyTest.Interpolator.interpolate(original)

# sanitize sys.modules
sys.modules = __modules__

# turn stdout over to our tester, run the test, and then restore stdout
__globals__['__pytest__'] = sys.stdout = heisenberg
heisenberg.run(filename, interpolated, __globals__, __locals__)
sys.stdout = sys.__stdout__

heisenberg.stop_timer()
heisenberg.report()
